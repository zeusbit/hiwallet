package org.fc.wlt.ordbgens.wlt.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;
import org.fc.wlt.ordbgens.wlt.entity.WLTCertOrg;
import org.fc.wlt.ordbgens.wlt.entity.WLTCertOrgExample.Criteria;
import org.fc.wlt.ordbgens.wlt.entity.WLTCertOrgExample.Criterion;
import org.fc.wlt.ordbgens.wlt.entity.WLTCertOrgExample;

public class WLTCertOrgSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_CERT_ORG
     *
     * @mbggenerated Thu Feb 01 14:31:13 CST 2018
     */
    public String countByExample(WLTCertOrgExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("WLT_CERT_ORG");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_CERT_ORG
     *
     * @mbggenerated Thu Feb 01 14:31:13 CST 2018
     */
    public String deleteByExample(WLTCertOrgExample example) {
        BEGIN();
        DELETE_FROM("WLT_CERT_ORG");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_CERT_ORG
     *
     * @mbggenerated Thu Feb 01 14:31:13 CST 2018
     */
    public String insertSelective(WLTCertOrg record) {
        BEGIN();
        INSERT_INTO("WLT_CERT_ORG");
        
        if (record.getOrgId() != null) {
            VALUES("ORG_ID", "#{orgId,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCode() != null) {
            VALUES("ORG_CODE", "#{orgCode,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgName() != null) {
            VALUES("ORG_NAME", "#{orgName,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgType() != null) {
            VALUES("ORG_TYPE", "#{orgType,jdbcType=VARCHAR}");
        }
        
        if (record.getUserId() != null) {
            VALUES("USER_ID", "#{userId,jdbcType=VARCHAR}");
        }
        
        if (record.getCorporateName() != null) {
            VALUES("CORPORATE_NAME", "#{corporateName,jdbcType=VARCHAR}");
        }
        
        if (record.getLicenseCode() != null) {
            VALUES("LICENSE_CODE", "#{licenseCode,jdbcType=VARCHAR}");
        }
        
        if (record.getLicensePhotoId() != null) {
            VALUES("LICENSE_PHOTO_ID", "#{licensePhotoId,jdbcType=VARCHAR}");
        }
        
        if (record.getNational() != null) {
            VALUES("NATIONAL", "#{national,jdbcType=VARCHAR}");
        }
        
        if (record.getProvince() != null) {
            VALUES("PROVINCE", "#{province,jdbcType=VARCHAR}");
        }
        
        if (record.getCity() != null) {
            VALUES("CITY", "#{city,jdbcType=VARCHAR}");
        }
        
        if (record.getStreet() != null) {
            VALUES("STREET", "#{street,jdbcType=VARCHAR}");
        }
        
        if (record.getTel() != null) {
            VALUES("TEL", "#{tel,jdbcType=VARCHAR}");
        }
        
        if (record.getFax() != null) {
            VALUES("FAX", "#{fax,jdbcType=VARCHAR}");
        }
        
        if (record.getWebRecordNum() != null) {
            VALUES("WEB_RECORD_NUM", "#{webRecordNum,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgStatus() != null) {
            VALUES("ORG_STATUS", "#{orgStatus,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedTime() != null) {
            VALUES("CREATED_TIME", "#{createdTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedTime() != null) {
            VALUES("UPDATED_TIME", "#{updatedTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReserved1() != null) {
            VALUES("RESERVED1", "#{reserved1,jdbcType=VARCHAR}");
        }
        
        if (record.getReserved2() != null) {
            VALUES("RESERVED2", "#{reserved2,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_CERT_ORG
     *
     * @mbggenerated Thu Feb 01 14:31:13 CST 2018
     */
    public String selectByExample(WLTCertOrgExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("ORG_ID");
        } else {
            SELECT("ORG_ID");
        }
        SELECT("ORG_CODE");
        SELECT("ORG_NAME");
        SELECT("ORG_TYPE");
        SELECT("USER_ID");
        SELECT("CORPORATE_NAME");
        SELECT("LICENSE_CODE");
        SELECT("LICENSE_PHOTO_ID");
        SELECT("NATIONAL");
        SELECT("PROVINCE");
        SELECT("CITY");
        SELECT("STREET");
        SELECT("TEL");
        SELECT("FAX");
        SELECT("WEB_RECORD_NUM");
        SELECT("ORG_STATUS");
        SELECT("CREATED_TIME");
        SELECT("UPDATED_TIME");
        SELECT("RESERVED1");
        SELECT("RESERVED2");
        FROM("WLT_CERT_ORG");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        if(example!=null&&example.getSelectCols()!=null&&example.getSelectCols().trim().length()>0){
		BEGIN();
		if (example != null && example.isDistinct()) {
			SELECT_DISTINCT(example.getSelectCols());
		} else {
				SELECT(example.getSelectCols());
		}
				FROM("WLT_CERT_ORG");				applyWhere(example, false);
		}
        if(example != null){
            if(example.getLimit() !=  Integer.MAX_VALUE && example.getOffset() >0 ){
                String retstr= SQL().concat(" limit "+example.getOffset()+","+example.getLimit());
                if(example.isForUpdate()) { return retstr+"  FOR UPDATE " ;} else { return retstr;}}
                else if(example.isForUpdate()){  return SQL()+"  FOR UPDATE " ;  }
            }
            return SQL();
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_CERT_ORG
     *
     * @mbggenerated Thu Feb 01 14:31:13 CST 2018
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        WLTCertOrg record = (WLTCertOrg) parameter.get("record");
        WLTCertOrgExample example = (WLTCertOrgExample) parameter.get("example");
        
        BEGIN();
        UPDATE("WLT_CERT_ORG");
        
        if (record.getOrgId() != null) {
            SET("ORG_ID = #{record.orgId,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCode() != null) {
            SET("ORG_CODE = #{record.orgCode,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgName() != null) {
            SET("ORG_NAME = #{record.orgName,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgType() != null) {
            SET("ORG_TYPE = #{record.orgType,jdbcType=VARCHAR}");
        }
        
        if (record.getUserId() != null) {
            SET("USER_ID = #{record.userId,jdbcType=VARCHAR}");
        }
        
        if (record.getCorporateName() != null) {
            SET("CORPORATE_NAME = #{record.corporateName,jdbcType=VARCHAR}");
        }
        
        if (record.getLicenseCode() != null) {
            SET("LICENSE_CODE = #{record.licenseCode,jdbcType=VARCHAR}");
        }
        
        if (record.getLicensePhotoId() != null) {
            SET("LICENSE_PHOTO_ID = #{record.licensePhotoId,jdbcType=VARCHAR}");
        }
        
        if (record.getNational() != null) {
            SET("NATIONAL = #{record.national,jdbcType=VARCHAR}");
        }
        
        if (record.getProvince() != null) {
            SET("PROVINCE = #{record.province,jdbcType=VARCHAR}");
        }
        
        if (record.getCity() != null) {
            SET("CITY = #{record.city,jdbcType=VARCHAR}");
        }
        
        if (record.getStreet() != null) {
            SET("STREET = #{record.street,jdbcType=VARCHAR}");
        }
        
        if (record.getTel() != null) {
            SET("TEL = #{record.tel,jdbcType=VARCHAR}");
        }
        
        if (record.getFax() != null) {
            SET("FAX = #{record.fax,jdbcType=VARCHAR}");
        }
        
        if (record.getWebRecordNum() != null) {
            SET("WEB_RECORD_NUM = #{record.webRecordNum,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgStatus() != null) {
            SET("ORG_STATUS = #{record.orgStatus,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedTime() != null) {
            SET("CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedTime() != null) {
            SET("UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReserved1() != null) {
            SET("RESERVED1 = #{record.reserved1,jdbcType=VARCHAR}");
        }
        
        if (record.getReserved2() != null) {
            SET("RESERVED2 = #{record.reserved2,jdbcType=VARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_CERT_ORG
     *
     * @mbggenerated Thu Feb 01 14:31:13 CST 2018
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("WLT_CERT_ORG");
        
        SET("ORG_ID = #{record.orgId,jdbcType=VARCHAR}");
        SET("ORG_CODE = #{record.orgCode,jdbcType=VARCHAR}");
        SET("ORG_NAME = #{record.orgName,jdbcType=VARCHAR}");
        SET("ORG_TYPE = #{record.orgType,jdbcType=VARCHAR}");
        SET("USER_ID = #{record.userId,jdbcType=VARCHAR}");
        SET("CORPORATE_NAME = #{record.corporateName,jdbcType=VARCHAR}");
        SET("LICENSE_CODE = #{record.licenseCode,jdbcType=VARCHAR}");
        SET("LICENSE_PHOTO_ID = #{record.licensePhotoId,jdbcType=VARCHAR}");
        SET("NATIONAL = #{record.national,jdbcType=VARCHAR}");
        SET("PROVINCE = #{record.province,jdbcType=VARCHAR}");
        SET("CITY = #{record.city,jdbcType=VARCHAR}");
        SET("STREET = #{record.street,jdbcType=VARCHAR}");
        SET("TEL = #{record.tel,jdbcType=VARCHAR}");
        SET("FAX = #{record.fax,jdbcType=VARCHAR}");
        SET("WEB_RECORD_NUM = #{record.webRecordNum,jdbcType=VARCHAR}");
        SET("ORG_STATUS = #{record.orgStatus,jdbcType=VARCHAR}");
        SET("CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP}");
        SET("UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP}");
        SET("RESERVED1 = #{record.reserved1,jdbcType=VARCHAR}");
        SET("RESERVED2 = #{record.reserved2,jdbcType=VARCHAR}");
        
        WLTCertOrgExample example = (WLTCertOrgExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_CERT_ORG
     *
     * @mbggenerated Thu Feb 01 14:31:13 CST 2018
     */
    public String updateByPrimaryKeySelective(WLTCertOrg record) {
        BEGIN();
        UPDATE("WLT_CERT_ORG");
        
        if (record.getOrgCode() != null) {
            SET("ORG_CODE = #{orgCode,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgName() != null) {
            SET("ORG_NAME = #{orgName,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgType() != null) {
            SET("ORG_TYPE = #{orgType,jdbcType=VARCHAR}");
        }
        
        if (record.getUserId() != null) {
            SET("USER_ID = #{userId,jdbcType=VARCHAR}");
        }
        
        if (record.getCorporateName() != null) {
            SET("CORPORATE_NAME = #{corporateName,jdbcType=VARCHAR}");
        }
        
        if (record.getLicenseCode() != null) {
            SET("LICENSE_CODE = #{licenseCode,jdbcType=VARCHAR}");
        }
        
        if (record.getLicensePhotoId() != null) {
            SET("LICENSE_PHOTO_ID = #{licensePhotoId,jdbcType=VARCHAR}");
        }
        
        if (record.getNational() != null) {
            SET("NATIONAL = #{national,jdbcType=VARCHAR}");
        }
        
        if (record.getProvince() != null) {
            SET("PROVINCE = #{province,jdbcType=VARCHAR}");
        }
        
        if (record.getCity() != null) {
            SET("CITY = #{city,jdbcType=VARCHAR}");
        }
        
        if (record.getStreet() != null) {
            SET("STREET = #{street,jdbcType=VARCHAR}");
        }
        
        if (record.getTel() != null) {
            SET("TEL = #{tel,jdbcType=VARCHAR}");
        }
        
        if (record.getFax() != null) {
            SET("FAX = #{fax,jdbcType=VARCHAR}");
        }
        
        if (record.getWebRecordNum() != null) {
            SET("WEB_RECORD_NUM = #{webRecordNum,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgStatus() != null) {
            SET("ORG_STATUS = #{orgStatus,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedTime() != null) {
            SET("CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedTime() != null) {
            SET("UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReserved1() != null) {
            SET("RESERVED1 = #{reserved1,jdbcType=VARCHAR}");
        }
        
        if (record.getReserved2() != null) {
            SET("RESERVED2 = #{reserved2,jdbcType=VARCHAR}");
        }
        
        WHERE("ORG_ID = #{orgId,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_CERT_ORG
     *
     * @mbggenerated Thu Feb 01 14:31:13 CST 2018
     */
    protected void applyWhere(WLTCertOrgExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}