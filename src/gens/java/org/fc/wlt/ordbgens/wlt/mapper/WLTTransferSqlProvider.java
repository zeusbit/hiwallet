package org.fc.wlt.ordbgens.wlt.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;
import org.fc.wlt.ordbgens.wlt.entity.WLTTransfer;
import org.fc.wlt.ordbgens.wlt.entity.WLTTransferExample.Criteria;
import org.fc.wlt.ordbgens.wlt.entity.WLTTransferExample.Criterion;
import org.fc.wlt.ordbgens.wlt.entity.WLTTransferExample;

public class WLTTransferSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_TRANSFER
     *
     * @mbggenerated Thu Feb 01 14:31:14 CST 2018
     */
    public String countByExample(WLTTransferExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("WLT_TRANSFER");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_TRANSFER
     *
     * @mbggenerated Thu Feb 01 14:31:14 CST 2018
     */
    public String deleteByExample(WLTTransferExample example) {
        BEGIN();
        DELETE_FROM("WLT_TRANSFER");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_TRANSFER
     *
     * @mbggenerated Thu Feb 01 14:31:14 CST 2018
     */
    public String insertSelective(WLTTransfer record) {
        BEGIN();
        INSERT_INTO("WLT_TRANSFER");
        
        if (record.getTransferId() != null) {
            VALUES("TRANSFER_ID", "#{transferId,jdbcType=VARCHAR}");
        }
        
        if (record.getSourceUserId() != null) {
            VALUES("SOURCE_USER_ID", "#{sourceUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getSourceAssetId() != null) {
            VALUES("SOURCE_ASSET_ID", "#{sourceAssetId,jdbcType=VARCHAR}");
        }
        
        if (record.getSourceAmount() != null) {
            VALUES("SOURCE_AMOUNT", "#{sourceAmount,jdbcType=DOUBLE}");
        }
        
        if (record.getSourceFundId() != null) {
            VALUES("SOURCE_FUND_ID", "#{sourceFundId,jdbcType=VARCHAR}");
        }
        
        if (record.getTargetUserId() != null) {
            VALUES("TARGET_USER_ID", "#{targetUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getTargetAssetId() != null) {
            VALUES("TARGET_ASSET_ID", "#{targetAssetId,jdbcType=VARCHAR}");
        }
        
        if (record.getTargetAmount() != null) {
            VALUES("TARGET_AMOUNT", "#{targetAmount,jdbcType=DOUBLE}");
        }
        
        if (record.getTargetFundId() != null) {
            VALUES("TARGET_FUND_ID", "#{targetFundId,jdbcType=VARCHAR}");
        }
        
        if (record.getTotalFee() != null) {
            VALUES("TOTAL_FEE", "#{totalFee,jdbcType=DOUBLE}");
        }
        
        if (record.getTransferType() != null) {
            VALUES("TRANSFER_TYPE", "#{transferType,jdbcType=VARCHAR}");
        }
        
        if (record.getPendId() != null) {
            VALUES("PEND_ID", "#{pendId,jdbcType=VARCHAR}");
        }
        
        if (record.getTransferStatus() != null) {
            VALUES("TRANSFER_STATUS", "#{transferStatus,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedTime() != null) {
            VALUES("CREATED_TIME", "#{createdTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedTime() != null) {
            VALUES("UPDATED_TIME", "#{updatedTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReserved01() != null) {
            VALUES("RESERVED_01", "#{reserved01,jdbcType=VARCHAR}");
        }
        
        if (record.getReserved02() != null) {
            VALUES("RESERVED_02", "#{reserved02,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_TRANSFER
     *
     * @mbggenerated Thu Feb 01 14:31:14 CST 2018
     */
    public String selectByExample(WLTTransferExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("TRANSFER_ID");
        } else {
            SELECT("TRANSFER_ID");
        }
        SELECT("SOURCE_USER_ID");
        SELECT("SOURCE_ASSET_ID");
        SELECT("SOURCE_AMOUNT");
        SELECT("SOURCE_FUND_ID");
        SELECT("TARGET_USER_ID");
        SELECT("TARGET_ASSET_ID");
        SELECT("TARGET_AMOUNT");
        SELECT("TARGET_FUND_ID");
        SELECT("TOTAL_FEE");
        SELECT("TRANSFER_TYPE");
        SELECT("PEND_ID");
        SELECT("TRANSFER_STATUS");
        SELECT("CREATED_TIME");
        SELECT("UPDATED_TIME");
        SELECT("RESERVED_01");
        SELECT("RESERVED_02");
        FROM("WLT_TRANSFER");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        if(example!=null&&example.getSelectCols()!=null&&example.getSelectCols().trim().length()>0){
		BEGIN();
		if (example != null && example.isDistinct()) {
			SELECT_DISTINCT(example.getSelectCols());
		} else {
				SELECT(example.getSelectCols());
		}
				FROM("WLT_TRANSFER");				applyWhere(example, false);
		}
        if(example != null){
            if(example.getLimit() !=  Integer.MAX_VALUE && example.getOffset() >0 ){
                String retstr= SQL().concat(" limit "+example.getOffset()+","+example.getLimit());
                if(example.isForUpdate()) { return retstr+"  FOR UPDATE " ;} else { return retstr;}}
                else if(example.isForUpdate()){  return SQL()+"  FOR UPDATE " ;  }
            }
            return SQL();
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_TRANSFER
     *
     * @mbggenerated Thu Feb 01 14:31:14 CST 2018
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        WLTTransfer record = (WLTTransfer) parameter.get("record");
        WLTTransferExample example = (WLTTransferExample) parameter.get("example");
        
        BEGIN();
        UPDATE("WLT_TRANSFER");
        
        if (record.getTransferId() != null) {
            SET("TRANSFER_ID = #{record.transferId,jdbcType=VARCHAR}");
        }
        
        if (record.getSourceUserId() != null) {
            SET("SOURCE_USER_ID = #{record.sourceUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getSourceAssetId() != null) {
            SET("SOURCE_ASSET_ID = #{record.sourceAssetId,jdbcType=VARCHAR}");
        }
        
        if (record.getSourceAmount() != null) {
            SET("SOURCE_AMOUNT = #{record.sourceAmount,jdbcType=DOUBLE}");
        }
        
        if (record.getSourceFundId() != null) {
            SET("SOURCE_FUND_ID = #{record.sourceFundId,jdbcType=VARCHAR}");
        }
        
        if (record.getTargetUserId() != null) {
            SET("TARGET_USER_ID = #{record.targetUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getTargetAssetId() != null) {
            SET("TARGET_ASSET_ID = #{record.targetAssetId,jdbcType=VARCHAR}");
        }
        
        if (record.getTargetAmount() != null) {
            SET("TARGET_AMOUNT = #{record.targetAmount,jdbcType=DOUBLE}");
        }
        
        if (record.getTargetFundId() != null) {
            SET("TARGET_FUND_ID = #{record.targetFundId,jdbcType=VARCHAR}");
        }
        
        if (record.getTotalFee() != null) {
            SET("TOTAL_FEE = #{record.totalFee,jdbcType=DOUBLE}");
        }
        
        if (record.getTransferType() != null) {
            SET("TRANSFER_TYPE = #{record.transferType,jdbcType=VARCHAR}");
        }
        
        if (record.getPendId() != null) {
            SET("PEND_ID = #{record.pendId,jdbcType=VARCHAR}");
        }
        
        if (record.getTransferStatus() != null) {
            SET("TRANSFER_STATUS = #{record.transferStatus,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedTime() != null) {
            SET("CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedTime() != null) {
            SET("UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReserved01() != null) {
            SET("RESERVED_01 = #{record.reserved01,jdbcType=VARCHAR}");
        }
        
        if (record.getReserved02() != null) {
            SET("RESERVED_02 = #{record.reserved02,jdbcType=VARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_TRANSFER
     *
     * @mbggenerated Thu Feb 01 14:31:14 CST 2018
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("WLT_TRANSFER");
        
        SET("TRANSFER_ID = #{record.transferId,jdbcType=VARCHAR}");
        SET("SOURCE_USER_ID = #{record.sourceUserId,jdbcType=VARCHAR}");
        SET("SOURCE_ASSET_ID = #{record.sourceAssetId,jdbcType=VARCHAR}");
        SET("SOURCE_AMOUNT = #{record.sourceAmount,jdbcType=DOUBLE}");
        SET("SOURCE_FUND_ID = #{record.sourceFundId,jdbcType=VARCHAR}");
        SET("TARGET_USER_ID = #{record.targetUserId,jdbcType=VARCHAR}");
        SET("TARGET_ASSET_ID = #{record.targetAssetId,jdbcType=VARCHAR}");
        SET("TARGET_AMOUNT = #{record.targetAmount,jdbcType=DOUBLE}");
        SET("TARGET_FUND_ID = #{record.targetFundId,jdbcType=VARCHAR}");
        SET("TOTAL_FEE = #{record.totalFee,jdbcType=DOUBLE}");
        SET("TRANSFER_TYPE = #{record.transferType,jdbcType=VARCHAR}");
        SET("PEND_ID = #{record.pendId,jdbcType=VARCHAR}");
        SET("TRANSFER_STATUS = #{record.transferStatus,jdbcType=VARCHAR}");
        SET("CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP}");
        SET("UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP}");
        SET("RESERVED_01 = #{record.reserved01,jdbcType=VARCHAR}");
        SET("RESERVED_02 = #{record.reserved02,jdbcType=VARCHAR}");
        
        WLTTransferExample example = (WLTTransferExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_TRANSFER
     *
     * @mbggenerated Thu Feb 01 14:31:14 CST 2018
     */
    public String updateByPrimaryKeySelective(WLTTransfer record) {
        BEGIN();
        UPDATE("WLT_TRANSFER");
        
        if (record.getSourceUserId() != null) {
            SET("SOURCE_USER_ID = #{sourceUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getSourceAssetId() != null) {
            SET("SOURCE_ASSET_ID = #{sourceAssetId,jdbcType=VARCHAR}");
        }
        
        if (record.getSourceAmount() != null) {
            SET("SOURCE_AMOUNT = #{sourceAmount,jdbcType=DOUBLE}");
        }
        
        if (record.getSourceFundId() != null) {
            SET("SOURCE_FUND_ID = #{sourceFundId,jdbcType=VARCHAR}");
        }
        
        if (record.getTargetUserId() != null) {
            SET("TARGET_USER_ID = #{targetUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getTargetAssetId() != null) {
            SET("TARGET_ASSET_ID = #{targetAssetId,jdbcType=VARCHAR}");
        }
        
        if (record.getTargetAmount() != null) {
            SET("TARGET_AMOUNT = #{targetAmount,jdbcType=DOUBLE}");
        }
        
        if (record.getTargetFundId() != null) {
            SET("TARGET_FUND_ID = #{targetFundId,jdbcType=VARCHAR}");
        }
        
        if (record.getTotalFee() != null) {
            SET("TOTAL_FEE = #{totalFee,jdbcType=DOUBLE}");
        }
        
        if (record.getTransferType() != null) {
            SET("TRANSFER_TYPE = #{transferType,jdbcType=VARCHAR}");
        }
        
        if (record.getPendId() != null) {
            SET("PEND_ID = #{pendId,jdbcType=VARCHAR}");
        }
        
        if (record.getTransferStatus() != null) {
            SET("TRANSFER_STATUS = #{transferStatus,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedTime() != null) {
            SET("CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedTime() != null) {
            SET("UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReserved01() != null) {
            SET("RESERVED_01 = #{reserved01,jdbcType=VARCHAR}");
        }
        
        if (record.getReserved02() != null) {
            SET("RESERVED_02 = #{reserved02,jdbcType=VARCHAR}");
        }
        
        WHERE("TRANSFER_ID = #{transferId,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WLT_TRANSFER
     *
     * @mbggenerated Thu Feb 01 14:31:14 CST 2018
     */
    protected void applyWhere(WLTTransferExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}